//* This file is part of the MOOSE framework
//* https://www.mooseframework.org
//*
//* All rights reserved, see COPYRIGHT for full restrictions
//* https://github.com/idaholab/moose/blob/master/COPYRIGHT
//*
//* Licensed under LGPL 2.1, please see LICENSE for details
//* https://www.gnu.org/licenses/lgpl-2.1.html

#pragma once

#include "AuxKernel.h"

/**
 * Auxiliary kernel responsible for computing the local power density
 * per unit volume generated by Joule heating.
 */
class JouleHeating : public AuxKernel
{
public:
  static InputParameters validParams();

  JouleHeating(const InputParameters & parameters);

protected:
  /**
   * AuxKernels MUST override computeValue.  computeValue() is called on
   * every quadrature point.  For Nodal Auxiliary variables those quadrature
   * points coincide with the nodes.
   */
  virtual Real computeValue() override;

  /// Holds the magnitude of the local electric field at the quadrature points
  const VectorVariableValue & _e_field;
  /// The local conductivity of the material.
  const MaterialProperty<Real> & _sigma;
};
